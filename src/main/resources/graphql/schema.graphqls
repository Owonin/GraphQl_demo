type Query {
    users: [User]
    tasks: [Task]
    findTaskById(id: ID): Task
    findUserById(id: ID): User
    findAllUsersPageable(size: Int, page: Int)
}

type Mutation{
    addTask(task: TaskInput): Task
    addUser(user: UserInput): User
}

input TaskInput {
    title: String!
    description: String
    status: String
    userId: ID!
}

input UserInput {
   name: String!
   email: String
}


type User {
    id: ID!
    name: String!
    email: String
    tasks: [Task]
}

type Task {
    id: ID!
    title: String!
    description: String
    status: Status
    user: User
}

input UserFilter{
    name: FilterFiled
    email: FilterFiled
}

enum Status {
     WORKING,
     CLOSED,
     CANCELED
}
